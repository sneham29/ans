sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
docker-compose --version
nano docker-compose.yml
(version: '3.8'
 
services:
  web:
    image: nginx:latest
    ports:
      - "80:80"
    networks:
      - frontend

  database:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: exampledb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend

  cache:
    image: redis:latest
    networks:
      - backend

networks:
  frontend:
  backend:

volumes:
  db-data:)

docker-compose up -d
docker-compose up -d --scale cache=3






16.05.2024

mkdir -p src test
cd src
touch Calculator.java
cd ..
cd test
touch CalculatorTest.java
cd ..
 wget https://repo1.maven.org/maven2/junit/junit/4.13.2/junit-4.13.2.jar
wget https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar
javac -cp .:junit-4.13.2.jar:hamcrest-core-1.3.jar src/bank.java test/banktest.java
java -cp .:src:test:junit-4.13.2.jar:hamcrest-core-1.3.jar org.junit.runner.JUnitCore banktest
[3:17 pm, 18/5/2024] Dhiyanuu: public class Bank {
    

    
    public int deposit(int a) {
        return a;
    }
   
    public int withdraw(int a) {
        return a;
    }
    
    public int bal(int a) {
        return a;
    }
    
    
   
    
}
[3:17 pm, 18/5/2024] Dhiyanuu: import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class BankTest {
   
    @Test
    public void testDeposit() {
         Bank bank = new Bank();
         int result = bank.deposit(5000);
         assertEquals( "Deposit mismatch",result, 5000);
    }
    
    @Test
    public void testWithDraw() {
         Bank bank = new Bank();
         int result = bank.withdraw(7000);
         assertEquals( "Withdrawal mismatch m",result, 5000);
    }
    
    @Test
    public void testBalance() {
         Bank bank = new Bank();
         int result = bank.bal(3000);
         assertEquals( "Balance mismatch",result, 3000);
    }
    
    
   
}
